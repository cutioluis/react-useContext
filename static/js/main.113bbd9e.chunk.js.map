{"version":3,"sources":["context/User/UserContext.js","components/Profile.js","components/UserList.js","context/User/UserReducer.js","context/types.js","context/User/UserState.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","Profile","selectedUser","useContext","className","style","width","src","avatar","alt","first_name","last_name","email","UserList","users","getUsers","getProfile","useEffect","map","user","onClick","id","href","state","action","payload","type","UserState","props","useReducer","UserReducer","dispatch","a","axios","get","res","console","log","data","Provider","value","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAKeA,G,YAFMC,2B,OCkBNC,EAjBC,WACd,IAAQC,EAAiBC,qBAAWJ,GAA5BG,aACR,OACE,8BACGA,EACC,sBAAKE,UAAU,6BAAf,UACE,qBAAKA,UAAU,+CAA+CC,MAAO,CAACC,MAAO,KAAMC,IAAKL,EAAaM,OAAQC,IAAI,KACjH,uCAAQP,EAAaQ,WAArB,YAAmCR,EAAaS,aAChD,wCAAYT,EAAaU,YAG3B,qDCqBOC,EA5BE,WACf,MAAwCV,qBAAWJ,GAA3Ce,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,WAKzB,OAHAC,qBAAU,WACRF,MACC,IAED,qBAAKX,UAAU,mBAAf,SACGU,EAAMI,KAAI,SAACC,GAAD,OACT,oBAEEC,QAAS,kBAAMJ,EAAWG,EAAKE,KAC/BjB,UAAU,8FAEVkB,KAAK,KALP,UAOE,qBACElB,UAAU,gCACVG,IAAKY,EAAKX,OACVC,IAAI,KAEN,sCAAOU,EAAKT,WAAZ,YAA0BS,EAAKR,eAX1BQ,EAAKE,U,8CCdL,WAACE,EAAOC,GACrB,IAAQC,EAAkBD,EAAlBC,QAER,OAF0BD,EAATE,MAGf,ICPqB,YDQnB,OAAO,2BACFH,GADL,IAEET,MAAOW,IAEX,ICXuB,cDYrB,OAAO,2BACFF,GADL,IAEErB,aAAcuB,IAElB,QACE,OAAOF,I,gBEiCEI,EA7CG,SAACC,GAGf,IAMA,EAA2BC,qBAAWC,EANhB,CAClBhB,MAAO,GACPZ,aAAc,OAIlB,mBAAOqB,EAAP,KAAeQ,EAAf,KAGMhB,EAAQ,uCAAG,4BAAAiB,EAAA,sEACKC,IAAMC,IAAI,+BADf,OACPC,EADO,OAEbC,QAAQC,IAAIF,GACZJ,EAAS,CACLL,KAAM,YACND,QAASU,EAAIG,KAAKA,OALT,2CAAH,qDASRtB,EAAU,uCAAG,WAAOK,GAAP,eAAAW,EAAA,sEACGC,IAAMC,IAAI,+BAAiCb,GAD9C,OACTc,EADS,OAEfC,QAAQC,IAAIF,EAAIG,KAAKA,MACrBP,EAAS,CACLL,KAAM,cACND,QAASU,EAAIG,KAAKA,OALP,2CAAH,sDAShB,OAGI,aAFA,CAEC,EAAYC,SAAb,CAAsBC,MAAO,CACzB1B,MAAOS,EAAMT,MACbZ,aAAcqB,EAAMrB,aACpBc,aACAD,YAJJ,SAOKa,EAAMa,YCjBJC,MAjBf,WACE,OACE,cAAC,EAAD,UACE,qBAAKtC,UAAU,gBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,cCVGuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.113bbd9e.chunk.js","sourcesContent":["/* Funcion que retorna un estado  */\r\nimport { createContext } from \"react\";\r\n\r\nconst UserContext  = createContext()\r\n\r\nexport default UserContext","import React from \"react\";\r\nimport UserContext from \"../context/User/UserContext\";\r\nimport { useContext } from \"react\";\r\n\r\nconst Profile = () => {\r\n  const { selectedUser } = useContext(UserContext);\r\n  return (\r\n    <div>\r\n      {selectedUser ? (\r\n        <div className=\"card card-body text-center\">\r\n          <img className=\"card-img-top rounded-circle m-auto img-fluid\" style={{width: 180}} src={selectedUser.avatar} alt=\"\" />\r\n          <h1>{`${selectedUser.first_name} ${selectedUser.last_name}`}</h1>\r\n          <h3>email:{ selectedUser.email}</h3>\r\n        </div>\r\n      ) : (\r\n        <h1>No user Selected</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect } from \"react\";\r\n\r\n/* Importamos useContext para traer nuestras funciones */\r\nimport { useContext } from \"react\";\r\n\r\n/* UserContext recordemos que engloba todo nuestras funciones asi que lo traemos */\r\nimport UserContext from \"../context/User/UserContext\";\r\n\r\nconst UserList = () => {\r\n  const { users, getUsers, getProfile } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n  return (\r\n    <div className=\"list-group h-100\">\r\n      {users.map((user) => (\r\n        <a\r\n          key={user.id}\r\n          onClick={() => getProfile(user.id)}\r\n          className=\"list-group-item list-group-item-action d-flex flex-row justify-start\r\n          align-items-center  \"\r\n          href=\"#!\"\r\n        >\r\n          <img\r\n            className=\"ing-fluid mr-4 rounded-circle\"\r\n            src={user.avatar}\r\n            alt=\"\"\r\n          />\r\n          <p>{`${user.first_name} ${user.last_name}`}</p>\r\n        </a>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","/* Condicionales de types */\r\n/* Aqui importo los types de types */\r\nimport { GET_USERS, GET_PROFILE } from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  const { payload, type } = action;\r\n\r\n  switch (type) {\r\n    case GET_USERS:\r\n      return {\r\n        ...state,\r\n        users: payload,\r\n      };\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        selectedUser: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n","/* Lista de funciones que podemos usar */\r\nexport const GET_USERS = 'GET_USERS'\r\nexport const GET_PROFILE = 'GET_PROFILE'\r\n\r\n","/* Aqui definimos el estado */\r\n\r\nimport React, { useReducer } from 'react';\r\nimport UserReducer from './UserReducer'\r\nimport UserContext from './UserContext';\r\nimport axios from 'axios'\r\n\r\nconst UserState = (props) => {\r\n\r\n    /* El estado inicial de nuestra aplicacion */\r\n    const initialState  = {\r\n        users: [],\r\n        selectedUser: null\r\n    }\r\n\r\n    /* -Reducer: Son las acciones que se van a ejuatar segun yo le diga */\r\n    const [state , dispatch] = useReducer(UserReducer, initialState)\r\n    \r\n    /* Funciones para obtener algo en este caso obtenerUsuarios  */\r\n    const getUsers = async () => {\r\n        const res = await axios.get('https://reqres.in/api/users')\r\n        console.log(res);\r\n        dispatch({\r\n            type: 'GET_USERS',\r\n            payload: res.data.data\r\n        });\r\n    }\r\n\r\n    const getProfile = async (id) => {\r\n        const res = await axios.get('https://reqres.in/api/users/' + id)\r\n        console.log(res.data.data);\r\n        dispatch({\r\n            type: 'GET_PROFILE',\r\n            payload: res.data.data\r\n        });\r\n    }\r\n\r\n    return (\r\n        /* Aqui exportamos userContext para decirle que vamos a usar para que tenga acceso a nuestras\r\n        funciones */\r\n        <UserContext.Provider value={{\r\n            users: state.users,\r\n            selectedUser: state.selectedUser,\r\n            getProfile,\r\n            getUsers\r\n\r\n        }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nexport default UserState;","import \"./App.css\";\nimport Profile from \"./components/Profile\";\nimport UserList from \"./components/UserList\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n/* Usar useContext para manejar el \nestado de una manera mejor y tener el\nestado en un mismo lugar  */\n\n/* CONTEXT */\n/* importamos userState para que nuestros componentes puedan acceder al estado  */\nimport UserState from \"./context/User/UserState\";\n\nfunction App() {\n  return (\n    <UserState>\n      <div className=\"container p-4\">\n        <div className=\"row\">\n          <div className=\"col-md-7\">\n            <UserList />\n          </div>\n          <div className=\"col-md-5\">\n            <Profile />\n          </div>\n        </div>\n      </div>\n    </UserState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}